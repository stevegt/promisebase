# pb CLI test suite
# https://github.com/google/go-cmdtest

$ mkdir var
$ cd var
$ pb init
Initialized empty database in ${ROOTDIR}/var

# put a blob
$ fecho blob1 this is blob1
$ pb putblob sha256 < blob1
blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908

# put blob fail 
$ fecho badblob1 this is badblob1
$ pb putblob sha257 < badblob1 --> FAIL
$ pb putblob sha256 < badblob2 --> FAIL

#not implemented: sha257 

# get it
$ pb getblob blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908
this is blob1

# get nonexisting blob
$ pb getblob blob/sha256/000/000/000000deadbeef00000000000000000000000000000000000000000000000000 --> FAIL

#open /tmp/cmdtest426797214/var/blob/sha256/a0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908: no such file or directory 

# try a multiline blob
$ fecho blob2 multiline blob\nthis is line 2
$ pb putblob sha256 < blob2
blob/sha256/1a7/b18/1a7b18e13062cfcdc1f36d53d0a852794e2547f8cf6379afd0c85958ba166262

# try a slightly bigger blob 
$ pb putblob sha256 < ../bigblob
blob/sha256/562/50f/56250ff893aebd9b41712f784c9b3eda3426e09e3b0cea708317fbc406aeb590

# put a node
$ pb putnode sha256 blob/sha256/1a7/b18/1a7b18e13062cfcdc1f36d53d0a852794e2547f8cf6379afd0c85958ba166262,multiline blob/sha256/562/50f/56250ff893aebd9b41712f784c9b3eda3426e09e3b0cea708317fbc406aeb590,bigblob
node/sha256/774/e44/774e448792c94450c23943c2cd33250c6083387eeafadef2193bc13d379eae34

# get it
$ pb getnode node/sha256/774/e44/774e448792c94450c23943c2cd33250c6083387eeafadef2193bc13d379eae34
blob/sha256/1a7/b18/1a7b18e13062cfcdc1f36d53d0a852794e2547f8cf6379afd0c85958ba166262 multiline
blob/sha256/562/50f/56250ff893aebd9b41712f784c9b3eda3426e09e3b0cea708317fbc406aeb590 bigblob

# put a parent node
$ pb putnode sha256 node/sha256/774/e44/774e448792c94450c23943c2cd33250c6083387eeafadef2193bc13d379eae34,node1 blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908,foo/blob1
node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f

# get it
$ pb getnode node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f
node/sha256/774/e44/774e448792c94450c23943c2cd33250c6083387eeafadef2193bc13d379eae34 node1
blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908 foo/blob1

# make a world from that parent node
# - this just makes a symlink in var/world and shows the result
$ pb putworld node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f world1
world/world1 -> node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f

# get a world
# - just calls Readlink("var/world/world1") and returns the thing it's pointing at
$ pb getworld world1
node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f

# get world fail
$ pb getworld world42 --> FAIL

# list all of the leaf nodes in a world 
$ pb lsworld world1
blob/sha256/1a7/b18/1a7b18e13062cfcdc1f36d53d0a852794e2547f8cf6379afd0c85958ba166262 multiline
blob/sha256/562/50f/56250ff893aebd9b41712f784c9b3eda3426e09e3b0cea708317fbc406aeb590 bigblob
blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908 foo/blob1

# list all of the nodes in a world, both leaf and inner, depth first
$ pb lsworld -a world1
node/sha256/0fc/ae0/0fcae01da3971ccfa7aeb3936ff0f6460928a1591c0430518b14bb9d538a3f9f world1
node/sha256/774/e44/774e448792c94450c23943c2cd33250c6083387eeafadef2193bc13d379eae34 node1
blob/sha256/1a7/b18/1a7b18e13062cfcdc1f36d53d0a852794e2547f8cf6379afd0c85958ba166262 multiline
blob/sha256/562/50f/56250ff893aebd9b41712f784c9b3eda3426e09e3b0cea708317fbc406aeb590 bigblob
blob/sha256/b0b/7f7/b0b7f7cb7b484df1b0daa5ec8d038fd2ad605c8018427bc3a3945a431d4ae908 foo/blob1

# lsworld fail
$ pb lsworld world42 --> FAIL
$ pb lsworld -a world42 --> FAIL

# show a concatenation of all leaf node content in a world
$ pb catworld world1
multiline blob
this is line 2
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Ut vitae
dapibus lorem. Pellentesque habitant morbi tristique senectus et netus
et malesuada fames ac turpis egestas. Phasellus suscipit mattis
interdum. Praesent nec diam mi. In placerat est sit amet cursus
ullamcorper. Sed porta dignissim elementum. Quisque at dui pharetra,
rhoncus nibh in, maximus erat. Praesent diam sapien, semper sed
sollicitudin id, porttitor eu urna. Quisque vitae ligula non mi
sagittis varius. Orci varius natoque penatibus et magnis dis
parturient montes, nascetur ridiculus mus.
this is blob1

# catworld fail
$ pb catworld world42 --> FAIL

# improve coverage
$ pb putblob lkdsajf --> FAIL

$ pb getblob kakajsn --> FAIL
path not found: "kakajsn"

$ pb lsworld lsadkfj --> FAIL

# putfile
# create a huge file
$ dd status=none if=/dev/urandom of=${ROOTDIR}/hugefile bs=1M count=100

# put it 
$ pb putstream sha256 world7 < ${ROOTDIR}/hugefile

# get it and save to hugefile.copy
$ pb catworld world7 -o ${ROOTDIR}/hugefile.copy 

# compare
$ cmp ${ROOTDIR}/hugefile ${ROOTDIR}/hugefile.copy
